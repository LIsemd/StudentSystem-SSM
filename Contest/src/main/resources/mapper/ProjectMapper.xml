<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zero.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.zero.bean.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="project_rank" jdbcType="VARCHAR" property="projectRank" />
    <result column="project_grade" jdbcType="VARCHAR" property="projectGrade" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_check" jdbcType="INTEGER" property="projectCheck" />
    <result column="project_status" jdbcType="INTEGER" property="projectStatus" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
  </resultMap>
  <resultMap id="WithNameResultMap" type="com.zero.bean.Project">
   <id column="id" jdbcType="INTEGER" property="id" />
   <result column="student_id" jdbcType="INTEGER" property="studentId" />
   <result column="project_rank" jdbcType="VARCHAR" property="projectRank" />
   <result column="project_grade" jdbcType="VARCHAR" property="projectGrade" />
   <result column="project_name" jdbcType="VARCHAR" property="projectName" />
   <result column="project_check" jdbcType="INTEGER" property="projectCheck" />
   <result column="project_status" jdbcType="INTEGER" property="projectStatus" />
   <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
  <association property="student" javaType="com.zero.bean.Student">
    	<id column="student_id" property="studentId"/>
    	<result column="student_name" property="studentName"/>
    	<result column="student_grade" property="studentGrade"/>
    	<result column="student_class" property="studentClass"/>
    	<result column="student_college" property="studentCollege"/>
    </association>
    <association property="teacher" javaType="com.zero.bean.Teacher">
    	<id column="teacher_id" property="teacherId"/>
    	<result column="teacher_name" property="teacherName"/>
    </association>
  </resultMap>
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, project_rank, project_grade, project_name, project_check, project_status, 
    teacher_id
  </sql>
  <sql id="WithName_Column_List">
      p.id, p.student_id, p.project_rank, p.project_grade, p.project_name, p.project_check, p.project_status, 
    p.teacher_id,s.student_id,s.student_name,s.student_grade,s.student_class,s.student_college,t.teacher_id,t.teacher_name
  </sql>
   <!--  List<Project> selectByExampleWithName(ProjectExample example);
  		  Project selectByPrimaryKeyWithName(Integer id);	-->
  		  
  	<select id="search" resultMap="WithNameResultMap">
    select 
    <include refid="WithName_Column_List" />
    FROM tbl_project p 
    LEFT JOIN tbl_student s ON p.student_id=s.student_id 
    LEFT JOIN tbl_teacher t ON p.teacher_id=t.teacher_id
    <where>
    <if test="studentName != null and studentName != ''">
    	 s.`student_name` like CONCAT('%', #{studentName} , '%')
    </if>
        <if test="projectName != null and projectName != ''">
   		p.`project_name` like CONCAT('%', #{projectName} , '%')
    </if>
    </where>
  </select>
  	<!-- 查询同时显示学生与教师信息 -->
   <select id="selectByExampleWithName"  resultMap="WithNameResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithName_Column_List" />
    from tbl_project p
    left join tbl_student s on p.`student_id` = s.`student_id`
    left join tbl_teacher t on p.`teacher_id` = t.`teacher_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
	<select id="selectByPrimaryKeyWithName"  resultMap="WithNameResultMap">
	    select 
	    <include refid="WithName_Column_List" />
	        from tbl_project p
		    left join tbl_student s on p.`student_id` = s.`student_id`
		    left join tbl_teacher t on p.`teacher_id` = t.`teacher_id`
	    where id = #{id,jdbcType=INTEGER}
	  </select>
  
  <select id="selectByExample" parameterType="com.zero.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zero.bean.ProjectExample">
    delete from tbl_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zero.bean.Project">
    insert into tbl_project (id, student_id, project_rank, 
      project_grade, project_name, project_check, 
      project_status, teacher_id)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{projectRank,jdbcType=VARCHAR}, 
      #{projectGrade,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{projectCheck,jdbcType=INTEGER}, 
      #{projectStatus,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zero.bean.Project">
    insert into tbl_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="projectRank != null">
        project_rank,
      </if>
      <if test="projectGrade != null">
        project_grade,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectCheck != null">
        project_check,
      </if>
      <if test="projectStatus != null">
        project_status,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="projectRank != null">
        #{projectRank,jdbcType=VARCHAR},
      </if>
      <if test="projectGrade != null">
        #{projectGrade,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCheck != null">
        #{projectCheck,jdbcType=INTEGER},
      </if>
      <if test="projectStatus != null">
        #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zero.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from tbl_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.projectRank != null">
        project_rank = #{record.projectRank,jdbcType=VARCHAR},
      </if>
      <if test="record.projectGrade != null">
        project_grade = #{record.projectGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCheck != null">
        project_check = #{record.projectCheck,jdbcType=INTEGER},
      </if>
      <if test="record.projectStatus != null">
        project_status = #{record.projectStatus,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_project
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      project_rank = #{record.projectRank,jdbcType=VARCHAR},
      project_grade = #{record.projectGrade,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_check = #{record.projectCheck,jdbcType=INTEGER},
      project_status = #{record.projectStatus,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zero.bean.Project">
    update tbl_project
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="projectRank != null">
        project_rank = #{projectRank,jdbcType=VARCHAR},
      </if>
      <if test="projectGrade != null">
        project_grade = #{projectGrade,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCheck != null">
        project_check = #{projectCheck,jdbcType=INTEGER},
      </if>
      <if test="projectStatus != null">
        project_status = #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zero.bean.Project">
    update tbl_project
    set student_id = #{studentId,jdbcType=INTEGER},
      project_rank = #{projectRank,jdbcType=VARCHAR},
      project_grade = #{projectGrade,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_check = #{projectCheck,jdbcType=INTEGER},
      project_status = #{projectStatus,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>